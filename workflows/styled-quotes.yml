name: Styled Quotes

on:
  script:
    config:
      force: true
      skipSchedule: true
      manualRunEvent:
        - workflow_dispatch
        - push
    run: |
      const path = require('path');
      const http = require('https');
      const fs = require('fs');

      const createImageBy = async (url, filePath, fileName, extension) => {
        const imagePath = path.join(filePath, `${fileName}.${extension}`);
        console.log(`Generating image with parameters: url=${url}, file=${imagePath}\n`);

        if (!fs.existsSync(filePath)) {
          fs.mkdirSync(filePath);
        }

        const image = await fs.createWriteStream(imagePath);
        await http.get(url, resp => {
          resp.pipe(image);
        });

        return imagePath;
      }

      try {
        const target = "https://styled-quotes.vercel.app/api";
        const theme = "buefy";
        const layout = "default";

        //const imageUrl = `${target}?theme=${theme}&layout=${layout}`;
        const imageUrl = "https://clipart-best.com/img/heart/heart-clip-art-4.png";
        const filePath = "images";
        const fileName = "quote";
        const extension = "png";

        const imagePath = await createImageBy(imageUrl, filePath, fileName, extension);
        console.info(`Storing quote image by path: ${imagePath}`);

        return [{"message": imagePath}];
      } catch (e) {
        log.error(`Cannot create quote image by path: ${filePath}/${fileName}.${extension}, message: ${e.message}`);
      }
#      return [{"message": "https://styled-screenshots.vercel.app/api?url=https://www.google.com/&width=450&height=250"}]
#      return [{"message": "https://styled-quotes.vercel.app/api?theme=buefy&layout=default"}]

#      const result = await helpers.axios.get(
#          "https://styled-quotes.vercel.app/api?theme=buefy&layout=default"
#      );
#
#      return [{"message": result.data}]

jobs:
  quotes:
    name: Styled quotes
    runs-on: ubuntu-latest
    steps:
      - name: Prepare a telegram message
        uses: actions/github-script@v4
        id: message
        env:
          outputs: ${{ toJson(on.script.outputs) }}
        with:
          script: |
            const { outputs } = process.env;

            console.log(JSON.stringify(outputs));

            return JSON.parse(outputs).message;

      - name: Send a telegram message
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: send photo message
          photo: https://clipart-best.com/img/heart/heart-clip-art-4.png
          document: https://clipart-best.com/img/heart/heart-clip-art-4.png
